name: 构建Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 设置Java环境
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-11-jdk \
          autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev \
          libncursesw5-dev libtinfo6 \
          cmake libffi-dev libssl-dev \
          build-essential ccache m4 \
          libc6-dev libgmp-dev

    - name: 安装Buildozer和依赖
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython
        pip install colorama appdirs sh jinja2 six

    - name: 设置Android环境变量
      run: |
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_ENV

    - name: 创建Android SDK目录
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mv cmdline-tools latest

    - name: 接受Android SDK许可证
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        yes | sdkmanager --licenses || true
        sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30" || true

    - name: 缓存Buildozer目录
      uses: actions/cache@v4
      with:
        path: |
          .buildozer
          $HOME/.cache/pip
          $HOME/android-sdk
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

    - name: 构建APK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        buildozer android debug
      timeout-minutes: 60

    - name: 上传APK文件
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: 系统信息查看器-APK
        path: bin/*.apk
        retention-days: 30

    - name: 显示构建信息
      if: always()
      run: |
        echo "构建完成状态检查："
        if [ -d "bin" ]; then
          echo "APK文件列表："
          ls -la bin/ || echo "bin目录为空"
        else
          echo "bin目录不存在"
        fi
        echo "Buildozer日志："
        if [ -f ".buildozer/logs/buildozer.log" ]; then
          tail -50 .buildozer/logs/buildozer.log
        fi
